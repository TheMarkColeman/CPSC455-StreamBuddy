{"ast":null,"code":"var _jsxFileName = \"/Users/nazishtazeem/WebstormProjects/CPSC455-StreamBuddy/streambuddy/src/components/RatingsAndReviewInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Rating from '@material-ui/lab/Rating';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Button, TextField } from \"@material-ui/core\";\nimport { UserContext } from \"./UserContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RatingsAndReviewInput(props) {\n  _s();\n\n  const [value, setValue] = React.useState(0);\n  const [value1, setValue1] = React.useState(null);\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n\n  const updateUserReviews = (user, review) => {\n    axios.put(`http://localhost:5000/api/users/${user._id}/reviews/`, {\n      review\n    }).then(res => {\n      setUser(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleChangeReview = event => {\n    setValue1(event.target.value);\n  };\n\n  const postReview = () => {\n    let review = {\n      // TODO: uncomment once we use real data\n      // movieId: props._id,\n      movieTitle: props.movieTitle,\n      moviePoster: props.moviePoster,\n      rating: value,\n      review: value1\n    };\n    updateUserReviews(user, review);\n  };\n\n  const closePopover = () => {\n    props.onPostClick();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"fieldset\",\n      mb: 3,\n      borderColor: \"transparent\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"legend\",\n        children: \"Rate This Movie!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Rating, {\n        name: \"simple-controlled\",\n        value: value,\n        onChange: (event, newValue) => {\n          setValue(newValue);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"fieldset\",\n      mb: 3,\n      borderColor: \"transparent\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"legend\",\n        style: {\n          marginBottom: 10\n        },\n        children: \"Write a Review!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-multiline-static\",\n        label: \"Your review of this movie\",\n        multiline: true,\n        rows: 8,\n        variant: \"outlined\",\n        value: value1,\n        onChange: handleChangeReview,\n        style: {\n          width: 400\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"box\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: event => {\n          postReview();\n          closePopover(event);\n        },\n        children: \"Post Review \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RatingsAndReviewInput, \"R2HyrApnTvC/G5m8rGeKnB203BU=\");\n\n_c = RatingsAndReviewInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"RatingsAndReviewInput\");","map":{"version":3,"sources":["/Users/nazishtazeem/WebstormProjects/CPSC455-StreamBuddy/streambuddy/src/components/RatingsAndReviewInput.js"],"names":["React","useContext","Rating","Typography","Box","Button","TextField","UserContext","axios","RatingsAndReviewInput","props","value","setValue","useState","value1","setValue1","user","setUser","updateUserReviews","review","put","_id","then","res","data","catch","err","console","log","handleChange","event","target","handleChangeReview","postReview","movieTitle","moviePoster","rating","closePopover","onPostClick","newValue","marginBottom","width"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport Rating from '@material-ui/lab/Rating';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport {Button, TextField} from \"@material-ui/core\";\nimport {UserContext} from \"./UserContext\";\nimport axios from \"axios\";\n\n\nexport default function RatingsAndReviewInput(props) {\n    const [value, setValue] = React.useState(0);\n    const [value1, setValue1] = React.useState(null);\n    const {user, setUser} = useContext(UserContext);\n\n\n    const updateUserReviews = (user, review) => {\n        axios.put(`http://localhost:5000/api/users/${user._id}/reviews/`, {\n            review\n        }).then((res) => {\n            setUser(res.data);\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n    };\n\n    const handleChangeReview = (event) => {\n        setValue1(event.target.value);\n    };\n\n\n    const postReview = () => {\n        let review = {\n            // TODO: uncomment once we use real data\n            // movieId: props._id,\n            movieTitle: props.movieTitle,\n            moviePoster: props.moviePoster,\n            rating: value,\n            review: value1\n        }\n        updateUserReviews(user, review);\n    };\n\n    const closePopover = () => {\n        props.onPostClick();\n    }\n\n    return (\n        <div>\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                <Typography component=\"legend\">Rate This Movie!</Typography>\n                <Rating\n                    name=\"simple-controlled\"\n                    value={value}\n                    onChange={(event, newValue) => {\n                        setValue(newValue);\n                    }}\n                />\n            </Box>\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                <Typography component=\"legend\" style={{marginBottom: 10}}>Write a Review!</Typography>\n                <TextField\n                    id=\"outlined-multiline-static\"\n                    label=\"Your review of this movie\"\n                    multiline\n                    rows={8}\n                    variant=\"outlined\"\n                    value={value1}\n                    onChange={handleChangeReview}\n                    style={{width: 400}}\n                />\n            </Box>\n                <box><Button variant=\"contained\"\n                        color=\"primary\" onClick={(event) => {\n                        postReview();\n                        closePopover(event);\n                        }}>Post Review </Button>\n                </box>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}