{"ast":null,"code":"var _jsxFileName = \"/Users/nazishtazeem/WebstormProjects/CPSC455-StreamBuddy/streambuddy/src/components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  searchbar: { ...theme.searchbar\n  }\n}));\n\nfunction SearchBar(props) {\n  _s();\n\n  const classes = useStyles(); // const [inputValue, setInputValue] = React.useState({name:''});\n\n  const [filmName, setFilmName] = useState(\"\"); // function recorder(event, value) {\n  //     const {name} = event.target;\n  //     setInputValue(existingVal => {\n  //         return {\n  //             [name]:value\n  //         };\n  //     });\n  //    // console.log(value);\n  // }\n\n  function handleChange(event, newInputValue) {\n    if (newInputValue !== null) {\n      console.log(newInputValue);\n      setFilmName(newInputValue.Title);\n      props.parentCallBack(newInputValue.Title);\n    }\n  }\n\n  const filterOptions = createFilterOptions({\n    matchFrom: 'start',\n    limit: 20\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n      background: \"transparent\",\n      id: \"search-box-title\",\n      options: props.autoCompleteData,\n      getOptionLabel: props.getOptionLabel,\n      style: props.style,\n      filterOptions: filterOptions,\n      onChange: handleChange,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        label: props.title,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"sjnNNsLw7VMHcKVr0UKgKtxCnsU=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/nazishtazeem/WebstormProjects/CPSC455-StreamBuddy/streambuddy/src/components/SearchBar.js"],"names":["React","useState","TextField","Autocomplete","createFilterOptions","makeStyles","useStyles","theme","searchbar","SearchBar","props","classes","filmName","setFilmName","handleChange","event","newInputValue","console","log","Title","parentCallBack","filterOptions","matchFrom","limit","autoCompleteData","getOptionLabel","style","params","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,IAAuBC,mBAAvB,QAAkD,+BAAlD;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACrCC,EAAAA,SAAS,EAAE,EACP,GAAGD,KAAK,CAACC;AADF;AAD0B,CAAZ,CAAD,CAA5B;;AAMA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAMC,OAAO,GAAGL,SAAS,EAAzB,CADsB,CAGtB;;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC,CAJsB,CAMtB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASa,YAAT,CAAsBC,KAAtB,EAA6BC,aAA7B,EAA4C;AACxC,QAAIA,aAAa,KAAK,IAAtB,EAA4B;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACAH,MAAAA,WAAW,CAACG,aAAa,CAACG,KAAf,CAAX;AACAT,MAAAA,KAAK,CAACU,cAAN,CAAqBJ,aAAa,CAACG,KAAnC;AACH;AACJ;;AAED,QAAME,aAAa,GAAGjB,mBAAmB,CAAC;AACtCkB,IAAAA,SAAS,EAAE,OAD2B;AAEtCC,IAAAA,KAAK,EAAE;AAF+B,GAAD,CAAzC;AAKA,sBACI;AAAA,2BAEI,QAAC,YAAD;AACI,MAAA,UAAU,EAAC,aADf;AAEI,MAAA,EAAE,EAAC,kBAFP;AAGI,MAAA,OAAO,EAAEb,KAAK,CAACc,gBAHnB;AAII,MAAA,cAAc,EAAEd,KAAK,CAACe,cAJ1B;AAKI,MAAA,KAAK,EAAEf,KAAK,CAACgB,KALjB;AAMI,MAAA,aAAa,EAAEL,aANnB;AAOI,MAAA,QAAQ,EAAEP,YAPd;AAQI,MAAA,WAAW,EAAGa,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,QAAA,KAAK,EAAEjB,KAAK,CAACkB,KAApC;AAA2C,QAAA,OAAO,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA;AAR7B;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA7CQnB,S;UACWH,S;;;KADXG,S;AA+CT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    searchbar: {\n        ...theme.searchbar\n    }\n}));\n\nfunction SearchBar(props) {\n    const classes = useStyles();\n\n    // const [inputValue, setInputValue] = React.useState({name:''});\n    const [filmName, setFilmName] = useState(\"\");\n\n    // function recorder(event, value) {\n    //     const {name} = event.target;\n\n    //     setInputValue(existingVal => {\n    //         return {\n    //             [name]:value\n    //         };\n    //     });\n    //    // console.log(value);\n    // }\n\n    function handleChange(event, newInputValue) {\n        if (newInputValue !== null) {\n            console.log(newInputValue);\n            setFilmName(newInputValue.Title);\n            props.parentCallBack(newInputValue.Title);\n        }\n    }\n\n    const filterOptions = createFilterOptions({\n        matchFrom: 'start',\n        limit: 20,\n    });\n\n    return (\n        <div>\n            {/* <div>{`inputValue: '${filmName.Title}'`}</div> */}\n            <Autocomplete\n                background=\"transparent\"\n                id=\"search-box-title\"\n                options={props.autoCompleteData}\n                getOptionLabel={props.getOptionLabel}\n                style={props.style}\n                filterOptions={filterOptions}\n                onChange={handleChange}\n                renderInput={(params) => <TextField {...params} label={props.title} variant=\"outlined\" />}\n            />\n        </div>\n    );\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}