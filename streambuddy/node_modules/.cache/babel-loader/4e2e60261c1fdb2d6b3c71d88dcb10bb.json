{"ast":null,"code":"var _jsxFileName = \"/Users/nazishtazeem/WebstormProjects/CPSC455-StreamBuddy/streambuddy/src/components/MoviecardListDense.js\";\nimport * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Moviecard from \"./Moviecard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'Title',\n  headerName: 'Title',\n  width: 200\n}, {\n  field: 'Year',\n  headerName: 'Year',\n  width: 120,\n  editable: true\n}, {\n  field: 'Rated',\n  headerName: 'Rated',\n  width: 120,\n  editable: true\n}, {\n  field: 'Released',\n  headerName: 'Released',\n  type: 'number',\n  width: 120,\n  editable: true\n}, {\n  field: 'Runtime',\n  headerName: 'Runtime',\n  type: 'number',\n  width: 120,\n  editable: true\n}, {\n  field: 'Genre',\n  headerName: 'Genre',\n  width: 120,\n  editable: true\n}, {\n  field: 'Director',\n  headerName: 'Director',\n  width: 120,\n  editable: true\n}, {\n  field: 'Actors',\n  headerName: 'Actors',\n  width: 120,\n  editable: true\n}, {\n  field: 'Plot',\n  headerName: 'Plot',\n  width: 120,\n  editable: true\n}, {\n  field: 'imdbRating',\n  headerName: 'IMDB Rating',\n  width: 120,\n  editable: true\n}];\nexport default function MoviecardListDense(props) {\n  const rows = props.movieList;\n\n  if (rows === undefined || null || rows.length < 1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-cards\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"center\",\n            spacing: 5,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBottom: 40\n              },\n              children: [\"Your list is empty :( \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 81\n              }, this), \" Add some Movies!!! \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      getRowId: row => row._id,\n      columns: columns,\n      pageSize: 5,\n      checkboxSelection: true,\n      disableSelectionOnClick: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_c = MoviecardListDense;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviecardListDense\");","map":{"version":3,"sources":["/Users/nazishtazeem/WebstormProjects/CPSC455-StreamBuddy/streambuddy/src/components/MoviecardListDense.js"],"names":["React","DataGrid","Moviecard","Grid","columns","field","headerName","width","editable","type","MoviecardListDense","props","rows","movieList","undefined","length","marginBottom","height","row","_id"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Moviecard from \"./Moviecard\";\nimport Grid from \"@material-ui/core/Grid\";\n\n\nconst columns = [\n    { field: 'Title', headerName: 'Title', width: 200 },\n    {\n        field: 'Year',\n        headerName: 'Year',\n        width: 120,\n        editable: true,\n    },\n    {\n        field: 'Rated',\n        headerName: 'Rated',\n        width: 120,\n        editable: true,\n    },\n    {\n        field: 'Released',\n        headerName: 'Released',\n        type: 'number',\n        width: 120,\n        editable: true,\n    },\n    {\n        field: 'Runtime',\n        headerName: 'Runtime',\n        type: 'number',\n        width: 120,\n        editable: true,\n    },\n    {\n        field: 'Genre',\n        headerName: 'Genre',\n        width: 120,\n        editable: true,\n    },\n    {\n        field: 'Director',\n        headerName: 'Director',\n        width: 120,\n        editable: true,\n    },\n    {\n        field: 'Actors',\n        headerName: 'Actors',\n        width: 120,\n        editable: true,\n    },\n    {\n        field: 'Plot',\n        headerName: 'Plot',\n        width: 120,\n        editable: true,\n    },\n    {\n        field: 'imdbRating',\n        headerName: 'IMDB Rating',\n        width: 120,\n        editable: true,\n    },\n\n];\n\n\nexport default function MoviecardListDense(props) {\n    const rows = props.movieList;\n    if((rows === undefined || null) || rows.length < 1 ){\n        return(\n            <div className=\"movie-cards\">\n                <Grid container>\n                    <Grid item xs={12}>\n                        <Grid container justify=\"center\" spacing={5}>\n                            <p style={{marginBottom: 40}}>Your list is empty :( <br /> Add some Movies!!! </p>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    } else\n    return (\n        <div style={{ height: 400, width: '100%' }}>\n            <DataGrid\n                rows={rows}\n                getRowId={(row) => row._id}\n                columns={columns}\n                pageSize={5}\n                checkboxSelection\n                disableSelectionOnClick\n            />\n        </div>\n    );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}