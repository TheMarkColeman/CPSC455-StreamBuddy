{"ast":null,"code":"var _jsxFileName = \"/Users/nazishtazeem/WebstormProjects/CPSC455-StreamBuddy/streambuddy/src/Components/Navbar.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ElevationScroll(props) {\n  _s();\n\n  const {\n    children\n  } = props; // useScrollTrigger hook is an event listener for when the user is scrolling\n\n  const trigger = useScrollTrigger({\n    // should there be little delay when a user is scrolling. Disabled it so there is no delay\n    disableHysteresis: true,\n    //0 means as soon as the user starts scrolling, event listener is triggered\n    threshold: 0\n  });\n  return /*#__PURE__*/React.cloneElement(children, {\n    elevation: trigger ? 4 : 0\n  });\n}\n\n_s(ElevationScroll, \"EC2GbbZl9x3XKoXLVx1H89cOBi0=\", false, function () {\n  return [useScrollTrigger];\n});\n\n_c = ElevationScroll;\nconst useStyles = makeStyles(theme => ({\n  toolbarMargin: { ...theme.mixins.toolbar\n  }\n}));\nexport function Navbar(props) {\n  _s2();\n\n  const classes = useStyles(); //toolbar helps stack content horizontally\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ElevationScroll, {\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"fixed\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"StreamBuddy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbarMargin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Navbar, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Navbar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ElevationScroll\");\n$RefreshReg$(_c2, \"Navbar\");","map":{"version":3,"sources":["/Users/nazishtazeem/WebstormProjects/CPSC455-StreamBuddy/streambuddy/src/Components/Navbar.js"],"names":["React","AppBar","Toolbar","useScrollTrigger","Typography","makeStyles","ElevationScroll","props","children","trigger","disableHysteresis","threshold","cloneElement","elevation","useStyles","theme","toolbarMargin","mixins","toolbar","Navbar","classes"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,qBAA3B;;;AAGA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB,CAD4B,CAG5B;;AACA,QAAME,OAAO,GAAGN,gBAAgB,CAAC;AAC7B;AACAO,IAAAA,iBAAiB,EAAE,IAFU;AAG7B;AACAC,IAAAA,SAAS,EAAE;AAJkB,GAAD,CAAhC;AAOA,sBAAOX,KAAK,CAACY,YAAN,CAAmBJ,QAAnB,EAA6B;AAChCK,IAAAA,SAAS,EAAEJ,OAAO,GAAG,CAAH,GAAO;AADO,GAA7B,CAAP;AAGH;;GAdQH,e;UAIWH,gB;;;KAJXG,e;AAgBT,MAAMQ,SAAS,GAAGT,UAAU,CAACU,KAAK,KAAK;AACnCC,EAAAA,aAAa,EAAE,EACX,GAAGD,KAAK,CAACE,MAAN,CAAaC;AADL;AADoB,CAAL,CAAN,CAA5B;AASA,OAAO,SAASC,MAAT,CAAgBZ,KAAhB,EAAuB;AAAA;;AAC1B,QAAMa,OAAO,GAAGN,SAAS,EAAzB,CAD0B,CAG1B;;AACA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,eAAD;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,OAAjB;AAAA,+BACI,QAAC,OAAD;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAK,MAAA,SAAS,EAAGM,OAAO,CAACJ;AAAzB;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;IAjBeG,M;UACIL,S;;;MADJK,M","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\n\n\nfunction ElevationScroll(props) {\n    const { children } = props;\n\n    // useScrollTrigger hook is an event listener for when the user is scrolling\n    const trigger = useScrollTrigger({\n        // should there be little delay when a user is scrolling. Disabled it so there is no delay\n        disableHysteresis: true,\n        //0 means as soon as the user starts scrolling, event listener is triggered\n        threshold: 0,\n    });\n\n    return React.cloneElement(children, {\n        elevation: trigger ? 4 : 0\n    });\n}\n\nconst useStyles = makeStyles(theme => ({\n    toolbarMargin: {\n        ...theme.mixins.toolbar\n    }\n}))\n\n\n\n\nexport function Navbar(props) {\n    const classes = useStyles();\n\n    //toolbar helps stack content horizontally\n    return (\n        <React.Fragment>\n            <ElevationScroll>\n                <AppBar position=\"fixed\">\n                    <Toolbar>\n                        <Typography variant=\"h5\">StreamBuddy</Typography>\n                    </Toolbar>\n                </AppBar>\n            </ElevationScroll>\n            <div className= {classes.toolbarMargin}/>\n        </React.Fragment>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}