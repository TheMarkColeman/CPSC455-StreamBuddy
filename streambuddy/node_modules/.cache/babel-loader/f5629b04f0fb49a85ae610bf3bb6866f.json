{"ast":null,"code":"var _jsxFileName = \"/Users/nazishtazeem/WebstormProjects/CPSC455-StreamBuddy/streambuddy/src/components/Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport { netflixMovieList } from \"../netflixMovieList\";\nimport { featuredMovieList } from \"../featuredMovieList\";\nimport MoviecardList from \"./MoviecardList\";\nimport SearchBar from \"./SearchBar\";\nimport SearchButton from \"./SearchButton\";\nimport AdvanceSearchButton from \"./AdvanceSearchButton\";\nimport AutocompletePlusCheckbox from \"./AutocompletePlusCheckbox\";\nimport GenreSelector from './GenreSelector';\nimport ActorSelector from './ActorSelector';\nimport YearOfRelease from \"./YearOfRelease\";\nimport ImdbScoreSelector from './ImdbScoreSelector'; // min and max years available from the API - we use it to init the range slider\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet yearRangeAvailable = [1930, 2022]; // the years selected by the user\n\nlet selectedYears = [1930, 2022]; //Min and max IMDB rating\n\nlet imdbScoreAvailable = [0, 10]; // the scores selected by the user\n\nlet selectedImdbScores = [0, 10]; // sets the user selected year\n\nfunction setSelectedYears(years) {\n  selectedYears[0] = years[0];\n  selectedYears[1] = years[1]; // TODO: delete logging statement for production\n  //console.log(\"selected range = \" + selectedYears[0] + \" - \" + selectedYears[1]);\n}\n\nfunction setSelectedimdbScore(score) {\n  selectedImdbScores[0] = score[0];\n  selectedImdbScores[1] = score[1]; // TODO: delete logging statement for production\n  //console.log(\"selected range = \" + selectedImdbScores[0] + \" - \" + selectedImdbScores[1]);\n}\n\nlet allCountries = [{\n  item: 'Austria'\n}, {\n  item: 'Brazil'\n}, {\n  item: 'Canada'\n}, {\n  item: 'China'\n}, {\n  item: 'Cuba'\n}, {\n  item: 'Denmark'\n}, {\n  item: 'France'\n}, {\n  item: 'Finland'\n}, {\n  item: 'Germany'\n}, {\n  item: 'Italy'\n}, {\n  item: 'Japan'\n}, {\n  item: 'Mexico'\n}, {\n  item: 'Pakistan'\n}, {\n  item: 'Russia'\n}, {\n  item: 'Spain'\n}, {\n  item: 'United Kingdom'\n}, {\n  item: 'United States of America'\n}];\nlet allLanguages = [{\n  item: 'German'\n}, {\n  item: 'English'\n}];\nlet allGenre = [{\n  item: 'Drama'\n}, {\n  item: 'Thriller'\n}, {\n  item: 'Romance'\n}, {\n  item: 'Horror'\n}, {\n  item: 'Action'\n}, {\n  item: 'Fantasy'\n}];\nlet allActors = [{\n  item: \"Leonardo DiCaprio\"\n}, {\n  item: \"Keanu Reeves\"\n}, {\n  item: \"Dwayne Johnson\"\n}, {\n  item: \"Scarlett Johansson\"\n}, {\n  item: \"Natalie Portman\"\n}, {\n  item: \"Marlon Brando\"\n}, {\n  item: \"Audrey Hepburn\"\n}, {\n  item: \"James Dean\"\n}];\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    top: 98\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    zIndex: 1300,\n    top: 98\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(1.5, 3),\n    // padding: 15px 10px\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n    marginTop: 98,\n    top: 98\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\nexport default function Sidebar() {\n  _s();\n\n  let searchOptions = [];\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n  const [list, setList] = useState(featuredMovieList);\n  const [filmName, setFilmName] = React.useState(\"\");\n  const [countryName, setCountryName] = React.useState(\"\");\n  const [language, setLanguage] = React.useState(\"\");\n  const [genre, setGenre] = React.useState(\"\");\n  const [actorName, setActorName] = React.useState(\"\");\n  const [year, setYear] = React.useState([\"\", \"\"]);\n  const [rating, setRating] = React.useState([\"\", \"\"]);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  function handleCallback(filmName) {\n    setFilmName(filmName);\n  }\n\n  function handleListCallback(filmList) {\n    console.log(filmList);\n    setList(filmList);\n  }\n\n  function handleCountryCallback(countryName) {\n    setCountryName(countryName);\n    console.log(countryName);\n    searchOptions.push({\n      Country: countryName\n    });\n    console.log(searchOptions);\n  }\n\n  function handleLanguageCallback(language) {\n    setLanguage(language);\n    searchOptions.push({\n      Language: language\n    });\n    console.log(searchOptions);\n  }\n\n  function handleGenreCallback(genre) {\n    setGenre(genre);\n    searchOptions.push({\n      Genre: genre\n    });\n    console.log(searchOptions);\n  }\n\n  function handleActorCallback(actorName) {\n    setActorName(actorName);\n    searchOptions.push({\n      Actor: actorName\n    });\n    console.log(searchOptions);\n  }\n\n  function handleYearCallback(selectedYears) {\n    setYear(selectedYears);\n  }\n\n  function handleRatingCallback(selectedImdbScores) {\n    setRating(selectedImdbScores);\n  }\n\n  function resetList() {\n    setList(featuredMovieList);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      className: clsx(classes.appBar, {\n        [classes.appBarShift]: open\n      }),\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerOpen,\n          edge: \"start\",\n          className: clsx(classes.menuButton, open && classes.hide),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Advanced Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: theme.direction === 'ltr' ? /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 54\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 76\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(AutocompletePlusCheckbox, {\n            name: \"countries\",\n            label: \"Country of Origin\",\n            items: allCountries,\n            advancedSearchCallback: handleCountryCallback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(AutocompletePlusCheckbox, {\n            name: \"languages\",\n            label: \"Language\",\n            items: allLanguages,\n            advancedSearchCallback: handleLanguageCallback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(AutocompletePlusCheckbox, {\n            name: \"genre\",\n            label: \"Select Genre\",\n            items: allGenre,\n            advancedSearchCallback: handleGenreCallback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(AutocompletePlusCheckbox, {\n            name: \"actors\",\n            label: \"Select Actors\",\n            items: allActors,\n            advancedSearchCallback: handleActorCallback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(YearOfRelease, {\n            textLabel: \"Year of Release\",\n            minVal: yearRangeAvailable[0],\n            maxVal: yearRangeAvailable[1],\n            getSelectedYears: handleYearCallback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ImdbScoreSelector, {\n            textLabel: \"IMDB Rating\",\n            minVal: imdbScoreAvailable[0],\n            maxVal: imdbScoreAvailable[1],\n            getSelectedYears: handleRatingCallback,\n            increments: 0.1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(AdvanceSearchButton, {\n            btnClass: classes.button1,\n            country: countryName,\n            language: language,\n            genre: genre,\n            actors: actorName,\n            yearOfRelease: year,\n            imdbRating: rating //query={getSearch}\n            ,\n            listCallback: handleListCallback,\n            resetList: resetList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: clsx(classes.content, {\n        [classes.contentShift]: open\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"welcome\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Welcome to StreamBuddy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Search for a movie or use the advanced filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-bar\",\n          children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n            parentCallBack: handleCallback,\n            title: \"Search for Movies\",\n            autoCompleteData: netflixMovieList,\n            getOptionLabel: option => option.Title,\n            style: {\n              width: 300\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"advance-button\",\n            children: /*#__PURE__*/_jsxDEV(SearchButton, {\n              btnClass: classes.button1,\n              filmName: filmName,\n              listCallback: handleListCallback,\n              resetList: resetList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-cards\",\n          children: /*#__PURE__*/_jsxDEV(MoviecardList, {\n            list: list\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Sidebar, \"R/f0NhUPhmh9E0VHVnikzvuwez0=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/nazishtazeem/WebstormProjects/CPSC455-StreamBuddy/streambuddy/src/components/Sidebar.js"],"names":["React","useState","clsx","makeStyles","useTheme","Drawer","CssBaseline","AppBar","Toolbar","List","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","ListItem","netflixMovieList","featuredMovieList","MoviecardList","SearchBar","SearchButton","AdvanceSearchButton","AutocompletePlusCheckbox","GenreSelector","ActorSelector","YearOfRelease","ImdbScoreSelector","yearRangeAvailable","selectedYears","imdbScoreAvailable","selectedImdbScores","setSelectedYears","years","setSelectedimdbScore","score","allCountries","item","allLanguages","allGenre","allActors","drawerWidth","useStyles","theme","root","display","top","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","zIndex","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","marginTop","content","flexGrow","contentShift","Sidebar","searchOptions","classes","open","setOpen","list","setList","filmName","setFilmName","countryName","setCountryName","language","setLanguage","genre","setGenre","actorName","setActorName","year","setYear","rating","setRating","handleDrawerOpen","handleDrawerClose","handleCallback","handleListCallback","filmList","console","log","handleCountryCallback","push","Country","handleLanguageCallback","Language","handleGenreCallback","Genre","handleActorCallback","Actor","handleYearCallback","handleRatingCallback","resetList","paper","direction","button1","option","Title"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport { netflixMovieList } from \"../netflixMovieList\";\nimport { featuredMovieList } from \"../featuredMovieList\";\nimport MoviecardList from \"./MoviecardList\";\nimport SearchBar from \"./SearchBar\";\nimport SearchButton from \"./SearchButton\";\nimport AdvanceSearchButton from \"./AdvanceSearchButton\";\nimport AutocompletePlusCheckbox from \"./AutocompletePlusCheckbox\";\nimport GenreSelector from './GenreSelector';\nimport ActorSelector from './ActorSelector';\nimport YearOfRelease from \"./YearOfRelease\";\nimport ImdbScoreSelector from './ImdbScoreSelector';\n\n\n\n// min and max years available from the API - we use it to init the range slider\nlet yearRangeAvailable = [1930, 2022];\n// the years selected by the user\nlet selectedYears = [1930, 2022];\n//Min and max IMDB rating\nlet imdbScoreAvailable = [0, 10];\n// the scores selected by the user\nlet selectedImdbScores = [0, 10];\n\n\n// sets the user selected year\nfunction setSelectedYears(years) {\n    selectedYears[0] = years[0];\n    selectedYears[1] = years[1];\n    // TODO: delete logging statement for production\n    //console.log(\"selected range = \" + selectedYears[0] + \" - \" + selectedYears[1]);\n}\n\nfunction setSelectedimdbScore(score) {\n    selectedImdbScores[0] = score[0];\n    selectedImdbScores[1] = score[1];\n    // TODO: delete logging statement for production\n    //console.log(\"selected range = \" + selectedImdbScores[0] + \" - \" + selectedImdbScores[1]);\n}\n\nlet allCountries = [\n    { item: 'Austria' },\n    { item: 'Brazil' },\n    { item: 'Canada' },\n    { item: 'China' },\n    { item: 'Cuba' },\n    { item: 'Denmark' },\n    { item: 'France' },\n    { item: 'Finland' },\n    { item: 'Germany' },\n    { item: 'Italy' },\n    { item: 'Japan' },\n    { item: 'Mexico' },\n    { item: 'Pakistan'},\n    { item: 'Russia' },\n    { item: 'Spain' },\n    { item: 'United Kingdom' },\n    { item: 'United States of America' }\n\n];\n\nlet allLanguages = [\n    { item: 'German' },\n    { item: 'English' },\n];\n\nlet allGenre = [\n    { item: 'Drama' },\n    { item: 'Thriller' },\n    { item: 'Romance' },\n    { item: 'Horror' },\n    { item: 'Action' },\n    { item: 'Fantasy' },\n];\n\nlet allActors = [\n    {item: \"Leonardo DiCaprio\"},\n    {item: \"Keanu Reeves\"},\n    {item:\"Dwayne Johnson\"},\n    {item: \"Scarlett Johansson\"},\n    {item: \"Natalie Portman\"},\n    {item: \"Marlon Brando\"},\n    {item: \"Audrey Hepburn\"},\n    {item: \"James Dean\"},\n]\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        top: 98\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        zIndex: 1300,\n        top: 98\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(1.5, 3),\n        // padding: 15px 10px\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n        marginTop: 98,\n        top: 98\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n\n}));\n\n\n\nexport default function Sidebar() {\n    let searchOptions = [];\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(true);\n    const [list, setList] = useState(featuredMovieList);\n\n\n\n    const [filmName, setFilmName] = React.useState(\"\");\n\n    const [countryName, setCountryName] = React.useState(\"\");\n    const [language, setLanguage] = React.useState(\"\");\n    const [genre, setGenre] = React.useState(\"\");\n    const [actorName, setActorName] = React.useState(\"\");\n    const [year, setYear] = React.useState([\"\", \"\"]);\n    const [rating, setRating] = React.useState([\"\", \"\"]);\n\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    function handleCallback(filmName) {\n        setFilmName(filmName);\n    }\n\n    function handleListCallback(filmList) {\n        console.log(filmList)\n        setList(filmList);\n    }\n\n    function handleCountryCallback(countryName) {\n        setCountryName(countryName);\n        console.log(countryName);\n        searchOptions.push({Country:countryName});\n        console.log(searchOptions);\n    }\n\n\n    function handleLanguageCallback(language) {\n        setLanguage(language);\n        searchOptions.push({Language:language});\n        console.log(searchOptions);\n    }\n\n    function handleGenreCallback(genre) {\n        setGenre(genre);\n        searchOptions.push({Genre:genre});\n        console.log(searchOptions);\n    }\n\n    function handleActorCallback(actorName) {\n        setActorName(actorName);\n        searchOptions.push({Actor:actorName});\n        console.log(searchOptions);\n    }\n\n    function handleYearCallback(selectedYears) {\n        setYear(selectedYears);\n    }\n\n    function handleRatingCallback(selectedImdbScores) {\n        setRating(selectedImdbScores);\n    }\n\n    function resetList() {\n        setList(featuredMovieList);\n    }\n\n\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Advanced Search\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    <ListItem>\n                        <AutocompletePlusCheckbox\n                            name=\"countries\"\n                            label=\"Country of Origin\"\n                            items={allCountries}\n                            advancedSearchCallback = {handleCountryCallback}\n                        />\n                    </ListItem>\n                    <Divider />\n\n                    <ListItem>\n                        <AutocompletePlusCheckbox\n                            name=\"languages\"\n                            label=\"Language\"\n                            items={allLanguages}\n                            advancedSearchCallback = {handleLanguageCallback}\n                        />\n                    </ListItem>\n                    <Divider />\n                    <ListItem>\n                        <AutocompletePlusCheckbox\n                            name=\"genre\"\n                            label=\"Select Genre\"\n                            items={allGenre}\n                            advancedSearchCallback = {handleGenreCallback}\n                        />\n                    </ListItem>\n                    <Divider />\n                    <ListItem>\n                        <AutocompletePlusCheckbox\n                            name=\"actors\"\n                            label=\"Select Actors\"\n                            items={allActors}\n                            advancedSearchCallback = {handleActorCallback}\n                        />\n                    </ListItem>\n\n                    <Divider />\n\n                    <ListItem>\n                        <YearOfRelease\n                            textLabel={\"Year of Release\"}\n                            minVal={yearRangeAvailable[0]}\n                            maxVal={yearRangeAvailable[1]}\n                            getSelectedYears={handleYearCallback} />\n                    </ListItem>\n                    <Divider />\n                    <ListItem>\n                        <ImdbScoreSelector\n                            textLabel={\"IMDB Rating\"}\n                            minVal={imdbScoreAvailable[0]}\n                            maxVal={imdbScoreAvailable[1]}\n                            getSelectedYears={handleRatingCallback}\n                            increments={0.1} />\n                    </ListItem>\n\n\n                    <Divider />\n                    <ListItem>\n                        <AdvanceSearchButton\n                            btnClass={classes.button1}\n                            country={countryName}\n                            language = {language}\n                            genre = {genre}\n                            actors = {actorName}\n                            yearOfRelease = {year}\n                            imdbRating = {rating}\n                            //query={getSearch}\n                            listCallback={handleListCallback}\n                            resetList={resetList} />\n                    </ListItem>\n\n                </List>\n\n\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n                <div className=\"content\">\n                    <div id=\"welcome\">\n                        <h1>Welcome to StreamBuddy</h1>\n                        <h2>Search for a movie or use the advanced filters</h2>\n                    </div>\n                    <div className=\"search-bar\">\n                        <SearchBar\n                            parentCallBack={handleCallback}\n                            title={\"Search for Movies\"}\n                            autoCompleteData={netflixMovieList}\n                            getOptionLabel={(option) => option.Title}\n                            style={{ width: 300 }} />\n                        <div className=\"advance-button\">\n                            <SearchButton\n                                btnClass={classes.button1}\n                                filmName={filmName}\n                                listCallback={handleListCallback}\n                                resetList={resetList}\n                            />\n                        </div>\n\n                    </div>\n                    <div className=\"movie-cards\">\n                        <MoviecardList list={list} />\n                    </div>\n                </div>\n            </main>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}