{"ast":null,"code":"var _jsxFileName = \"/Users/nazishtazeem/WebstormProjects/CPSC455-StreamBuddy/streambuddy/src/components/AdvanceSearchButton.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  button: { ...theme.button\n  }\n}));\nexport default function AdvanceSearchButton(props) {\n  _s();\n\n  const classes = useStyles();\n\n  function advanceSearch() {\n    let query = [];\n\n    if (props.country) {\n      let countries = queryWriter(props.country);\n      let result = countries.map(({\n        item\n      }) => item);\n      query.push({\n        country: result\n      });\n    }\n\n    if (props.language) {\n      let languages = queryWriter(props.language);\n      let result = languages.map(({\n        item\n      }) => item);\n      query.push({\n        language: result\n      });\n    }\n\n    if (props.genre) {\n      let genres = queryWriter(props.genre);\n      let result = genres.map(({\n        item\n      }) => item);\n      query.push({\n        genre: result\n      });\n    }\n\n    if (props.actors) {\n      let allActors = queryWriter(props.actors);\n      let result = allActors.map(({\n        item\n      }) => item);\n      query.push({\n        actors: result\n      });\n    }\n\n    if (props.yearOfRelease[0] > 0 && props.yearOfRelease[1] > 0) {\n      let releaseYear = queryWriter(props.yearOfRelease);\n      query.push({\n        years: releaseYear\n      });\n    }\n\n    if (props.imdbRating[0] > 0 && props.imdbRating[1] > 0) {\n      let ratingsImdb = queryWriter(props.imdbRating);\n      query.push({\n        rating: ratingsImdb\n      });\n    }\n\n    function queryWriter(property) {\n      console.log(property);\n      let propArray = [];\n\n      for (let item in property) {\n        propArray.push(property[item]);\n      }\n\n      return propArray;\n    }\n\n    let queryObject = Object.assign({}, ...query);\n    axios.post(\"http://localhost:5000/api/films/search\", queryObject).then(response => {\n      props.listCallback(response.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: advanceSearch,\n      style: {\n        marginLeft: -20\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: props.resetList,\n      style: {\n        marginLeft: 10\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdvanceSearchButton, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = AdvanceSearchButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdvanceSearchButton\");","map":{"version":3,"sources":["/Users/nazishtazeem/WebstormProjects/CPSC455-StreamBuddy/streambuddy/src/components/AdvanceSearchButton.js"],"names":["React","makeStyles","Button","axios","useStyles","theme","root","margin","spacing","button","AdvanceSearchButton","props","classes","advanceSearch","query","country","countries","queryWriter","result","map","item","push","language","languages","genre","genres","actors","allActors","yearOfRelease","releaseYear","years","imdbRating","ratingsImdb","rating","property","console","log","propArray","queryObject","Object","assign","post","then","response","listCallback","data","marginLeft","resetList"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    button: {\n        ...theme.button\n    }\n}));\n\n\nexport default function AdvanceSearchButton(props) {\n    const classes = useStyles();\n\n    function advanceSearch() {\n        let query = [];\n        if (props.country) {\n            let countries = queryWriter(props.country);\n            let result = countries.map(({ item }) => item);\n            query.push({country: result});\n        }\n        if (props.language) {\n            let languages = queryWriter(props.language);\n            let result = languages.map(({ item }) => item);\n            query.push({language: result});\n        }\n        if (props.genre) {\n            let genres = queryWriter(props.genre);\n            let result = genres.map(({ item }) => item);\n            query.push({genre: result});\n        }\n        if (props.actors) {\n            let allActors = queryWriter(props.actors);\n            let result = allActors.map(({ item }) => item);\n            query.push({actors: result});\n        }\n        if (props.yearOfRelease[0] > 0 && props.yearOfRelease[1] > 0 ) {\n            let releaseYear = queryWriter(props.yearOfRelease);\n            query.push({years: releaseYear});\n        }\n        if (props.imdbRating[0] > 0 && props.imdbRating[1] > 0 ) {\n            let ratingsImdb = queryWriter(props.imdbRating);\n            query.push({rating: ratingsImdb});\n        }\n\n        function queryWriter(property) {\n            console.log(property);\n            let propArray = [];\n            for (let item in property) {\n                propArray.push((property[item]));\n            }\n            return (propArray);\n        }\n\n        let queryObject = Object.assign({}, ...query);\n\n        axios.post(\"http://localhost:5000/api/films/search\", queryObject)\n            .then((response) => {\n                props.listCallback(response.data)\n            });\n    }\n    return (\n        <div>\n            <\n                Button\n                onClick={advanceSearch}\n                style={{marginLeft: -20}}\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}>\n                Search\n            </Button>\n            <Button\n                onClick={props.resetList}\n                style={{marginLeft: 10}}\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}>\n                Reset\n            </Button>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}