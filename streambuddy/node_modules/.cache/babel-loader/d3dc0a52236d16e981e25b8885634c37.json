{"ast":null,"code":"var _jsxFileName = \"/Users/nazishtazeem/WebstormProjects/CPSC455-StreamBuddy/streambuddy/src/components/ImdbScoreSelector.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction setMarks(props) {\n  return [{\n    value: props.minVal,\n    label: `${props.minVal}`\n  }, {\n    value: props.maxVal,\n    label: `${props.maxVal}`\n  }];\n}\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nfunction ImdbScoreSelector(props) {\n  _s();\n\n  const [value, setValue] = React.useState([props.minVal, props.maxVal]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    props.getSelectedYears(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RangeSlider\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      id: \"range-slider\",\n      gutterBottom: true,\n      children: props.textLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      value: value,\n      onChange: handleChange,\n      valueLabelDisplay: \"auto\",\n      \"aria-labelledby\": \"year-slider\",\n      getAriaValueText: valuetext,\n      max: props.maxVal,\n      min: props.minVal,\n      step: props.increments,\n      marks: setMarks(props)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ImdbScoreSelector, \"tuahLm8eyWjy0HIqne0OBogRXX0=\");\n\n_c = ImdbScoreSelector;\nexport default ImdbScoreSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImdbScoreSelector\");","map":{"version":3,"sources":["/Users/nazishtazeem/WebstormProjects/CPSC455-StreamBuddy/streambuddy/src/components/ImdbScoreSelector.js"],"names":["React","Slider","Typography","setMarks","props","value","minVal","label","maxVal","valuetext","ImdbScoreSelector","setValue","useState","handleChange","event","newValue","getSelectedYears","textLabel","increments"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,SAAO,CACH;AACIC,IAAAA,KAAK,EAAED,KAAK,CAACE,MADjB;AAEIC,IAAAA,KAAK,EAAG,GAAEH,KAAK,CAACE,MAAO;AAF3B,GADG,EAKH;AACID,IAAAA,KAAK,EAAED,KAAK,CAACI,MADjB;AAEID,IAAAA,KAAK,EAAG,GAAEH,KAAK,CAACI,MAAO;AAF3B,GALG,CAAP;AAUH;;AAED,SAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AACtB,SAAQ,GAAEA,KAAM,EAAhB;AACH;;AAID,SAASK,iBAAT,CAA2BN,KAA3B,EAAiC;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQM,QAAR,IAAoBX,KAAK,CAACY,QAAN,CAAe,CAACR,KAAK,CAACE,MAAP,EAAeF,KAAK,CAACI,MAArB,CAAf,CAA1B;;AAEA,QAAMK,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtCJ,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACAX,IAAAA,KAAK,CAACY,gBAAN,CAAuBD,QAAvB;AACH,GAHD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,cAAf;AAA8B,MAAA,YAAY,MAA1C;AAAA,gBACKX,KAAK,CAACa;AADX;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AACI,MAAA,KAAK,EAAEZ,KADX;AAEI,MAAA,QAAQ,EAAEQ,YAFd;AAGI,MAAA,iBAAiB,EAAC,MAHtB;AAII,yBAAgB,aAJpB;AAKI,MAAA,gBAAgB,EAAEJ,SALtB;AAMI,MAAA,GAAG,EAAEL,KAAK,CAACI,MANf;AAOI,MAAA,GAAG,EAAEJ,KAAK,CAACE,MAPf;AAQI,MAAA,IAAI,EAAEF,KAAK,CAACc,UARhB;AASI,MAAA,KAAK,EAAEf,QAAQ,CAACC,KAAD;AATnB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA3BQM,iB;;KAAAA,iB;AA6BT,eAAeA,iBAAf","sourcesContent":["import React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\n\nfunction setMarks(props) {\n    return [\n        {\n            value: props.minVal,\n            label: `${props.minVal}`\n        },\n        {\n            value: props.maxVal,\n            label: `${props.maxVal}`\n        }\n    ]\n}\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\n\nfunction ImdbScoreSelector(props){\n    const [value, setValue] = React.useState([props.minVal, props.maxVal]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        props.getSelectedYears(newValue);\n    };\n\n\n    return(\n        <div className=\"RangeSlider\">\n            <Typography id=\"range-slider\" gutterBottom>\n                {props.textLabel}\n            </Typography>\n            <Slider\n                value={value}\n                onChange={handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"year-slider\"\n                getAriaValueText={valuetext}\n                max={props.maxVal}\n                min={props.minVal}\n                step={props.increments}\n                marks={setMarks(props)}\n            />\n        </div>\n    )\n}\n\nexport default ImdbScoreSelector;"]},"metadata":{},"sourceType":"module"}